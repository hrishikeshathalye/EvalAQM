{"version":3,"sources":["webpack://dashjs/webpack/universalModuleDefinition","webpack://dashjs/webpack/bootstrap","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/mss/index.js","webpack://dashjs/(webpack)/buildin/module.js","webpack://dashjs/./src/streaming/vo/FragmentRequest.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/(webpack)/buildin/global.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/streaming/MediaPlayerEvents.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js","webpack://dashjs/./externals/BigInteger.js","webpack://dashjs/./src/streaming/vo/DataChunk.js","webpack://dashjs/./src/mss/MssFragmentInfoController.js","webpack://dashjs/./src/mss/errors/MssErrors.js","webpack://dashjs/./src/mss/MssFragmentMoofProcessor.js","webpack://dashjs/./src/mss/MssFragmentMoovProcessor.js","webpack://dashjs/./src/mss/MssFragmentProcessor.js","webpack://dashjs/./src/mss/parser/MssParser.js","webpack://dashjs/./src/mss/MssHandler.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DashJSError","code","message","data","this","context","global","dashjs","MssHandler","webpackPolyfill","deprecate","paths","children","FragmentRequest","url","action","ACTION_DOWNLOAD","startTime","NaN","mediaStartTime","mediaType","mediaInfo","type","duration","timescale","range","serviceLocation","requestStartDate","firstByteDate","requestEndDate","quality","index","availabilityStartTime","availabilityEndTime","wallStartTime","bytesLoaded","bytesTotal","delayLoadingTime","responseType","representationId","HTTPRequest","INIT_SEGMENT_TYPE","info","init","MEDIA_SEGMENT_TYPE","start","end","ACTION_COMPLETE","EventsBase","events","config","override","publicOnly","evt","indexOf","g","Function","e","ErrorsBase","errors","err","mediaPlayerEvents","AST_IN_FUTURE","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","BUFFER_LEVEL_UPDATED","DYNAMIC_TO_STATIC","ERROR","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_PROGRESS","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","LOG","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_STARTED","PERIOD_SWITCH_COMPLETED","QUALITY_CHANGE_REQUESTED","QUALITY_CHANGE_RENDERED","TRACK_CHANGE_RENDERED","STREAM_INITIALIZING","STREAM_UPDATED","STREAM_ACTIVATED","STREAM_DEACTIVATED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","TTML_PARSED","TTML_TO_PARSE","CAPTION_RENDERED","CAPTION_CONTAINER_RESIZE","CAN_PLAY","CAN_PLAY_THROUGH","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_LOADED_DATA","PLAYBACK_PAUSED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_STALLED","PLAYBACK_STARTED","PLAYBACK_TIME_UPDATED","PLAYBACK_WAITING","MANIFEST_VALIDITY_CHANGED","EVENT_MODE_ON_START","EVENT_MODE_ON_RECEIVE","CONFORMANCE_VIOLATION","REPRESENTATION_SWITCH","ADAPTATION_SET_REMOVED_NO_CAPABILITIES","tcpid","actualurl","trequest","tresponse","responsecode","interval","trace","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","_fileLoaderType","HTTPRequestTrace","b","_t","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INDEX_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","DVB_REPORTING_TYPE","LICENSE","OTHER_TYPE","bigInt","undefined","BASE","MAX_INT","MAX_INT_ARR","smallToArray","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseBase","parseValue","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","Math","floor","arrayToSmall","arr","trim","length","compareAbs","createArray","x","Array","truncate","ceil","add","a","sum","l_a","l_b","carry","base","push","addAny","addSmall","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","Error","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","prev","divide","next","modPow","plus","subtractAny","minus","small","multiply","l1","l2","multiplyKaratsuba","y","max","slice","ac","bd","abcd","times","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","isPositive","isOdd","compare","Infinity","compareTo","eq","notEquals","neq","greater","gt","lt","greaterOrEquals","geq","lesserOrEquals","leq","isPrime","strict","bits","bitLength","logN","log","toJSNumber","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","xor","roughLOB","min","gcd","integerLogarithm","tmp","text","toLowerCase","absBase","alphabetValues","digits","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","out","left","digit","toBaseString","stringify","join","parseStringValue","split","decimalPlace","test","parseNumberValue","toArray","str","toJSON","parseInt","minusOne","lcm","isInstance","low","random","restricted","top","fromArray","DataChunk","streamId","segmentType","bytes","endFragment","MssFragmentInfoController","instance","logger","fragmentModel","started","loadFragmentTimeout","startFragmentTime","streamProcessor","baseURLController","debug","stop","clearTimeout","loadNextFragmentInfo","representation","getRepresentationController","getCurrentRepresentation","adaptation","period","mpd","manifest","Period_asArray","AdaptationSet_asArray","segments","SegmentTemplate","SegmentTimeline","S_asArray","request","segment","getMediaInfo","adaptationIndex","id","resolve","path","media","replace","bandwidth","tManifest","getRequestForSegment","requestFragment","getFragmentModel","isFragmentLoadedOrPending","executeRequest","initialize","getType","controllerType","fragmentInfoLoaded","deltaFragmentTime","deltaTime","delay","response","Date","getTime","setTimeout","error","reset","getLogger","__dashjs_factory_name","FactoryMaker","getClassFactory","mssErrors","MSS_NO_TFRF_CODE","MSS_UNSUPPORTED_CODEC_CODE","MSS_NO_TFRF_MESSAGE","MSS_UNSUPPORTED_CODEC_MESSAGE","MssFragmentMoofProcessor","dashMetrics","playbackController","errorHandler","errHandler","eventBus","ISOBoxer","processTfrf","tfrf","tfdt","timeShiftBufferDepth","entry","segmentTime","endTime","S","entries","parseFloat","fragment_absolute_time","baseMediaDecodeTime","updateDVR","getStreamInfo","manifestInfo","fragment_duration","lastSegment","isPaused","splice","trigger","Events","sender","newDuration","MssErrors","dvrInfos","getCurrentDVRInfo","addDVRInfo","updateCurrentTime","getBoxOffset","parent","offset","boxes","size","convertFragment","isoFile","parseBuffer","tfhd","fetch","track_ID","traf","createFullBox","version","flags","trun","tfxd","_parent","sepiff","usertype","saio","entry_count","saiz","sample_count","default_sample_info_size","sample_info_size","NumberOfEntries","moof","getLength","data_offset","trafPosInMoof","sencPosInTraf","write","updateSegmentList","MssFragmentMoovProcessor","adaptationSet","contentProtection","trackId","constants","protectionController","createMoovBox","moov","createBox","mvhd","creation_time","modification_time","round","rate","volume","reserved1","reserved2","matrix","pre_defined","next_track_ID","createMvhdBox","trak","tkhd","layer","alternate_group","reserved3","width","height","createTkhdBox","mdia","mdhd","language","lang","createMdhdBox","hdlr","VIDEO","handler_type","AUDIO","reserved","createHdlrBox","minf","vmhd","graphicsmode","opcolor","createVmhdBox","smhd","balance","createSmhdBox","dinf","dref","location","createDrefBox","stbl","_data","stsd","codec","codecs","substring","avc1","data_reference_index","pre_defined1","pre_defined2","horizresolution","vertresolution","frame_count","compressorname","depth","pre_defined3","naluBytes","avcC","avcCLength","sps","pps","AVCProfileIndication","AVCLevelIndication","profile_compatibility","nalus","codecPrivateData","hexStringtoBuffer","Uint8Array","set","createAVC1ConfigurationRecord","sinf","createOriginalFormatBox","createSchemeTypeBox","createSchemeInformationBox","createAVCVisualSampleEntry","mp4a","channelcount","audioChannels","samplesize","reserved_3","samplerate","audioSamplingRate","esds","audioSpecificConfig","esdsLength","createMPEG4AACESDescriptor","createMP4AudioSampleEntry","createSampleEntry","createStsdBox","trex","default_sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","createTrexBox","keySystems","pssh_bytes","pssh","parsedBuffer","initData","Utils","appendBox","createProtectionSystemSpecificHeaderBox","getSupportedKeySystemsFromContentProtection","data_format","charCodeAt","stringToCharCode","schm","scheme_type","scheme_version","schi","tenc","default_IsEncrypted","default_IV_size","default_KID","createTrackEncryptionBox","buf","generateMoov","rep","ContentProtection","ftyp","major_brand","minor_version","compatible_brands","createFtypBox","createFile","arrayEqual","arr1","arr2","every","element","saioProcessor","_procFullBox","_procField","_procFieldArray","saizProcessor","sencProcessor","_procEntries","_procEntryField","_procSubEntries","clearAndCryptedData","uuidProcessor","_parsing","fragment_count","MssFragmentProcessor","mssFragmentMoovProcessor","mssFragmentMoofProcessor","processFragment","addBoxProcessor","MssParser","initialBufferSettings","BASE64","manifestModel","settings","SUPPORTED_CODECS","ROLE","ACCESSIBILITY","samplingFrequencyIndex","96000","88200","64000","48000","44100","32000","24000","22050","16000","12000","11025","8000","7350","mimeTypeMap","getAttributeAsBoolean","node","attrName","getAttribute","mapAdaptationSet","streamIndex","segmentTemplate","qualityLevels","representations","fallBackId","contentType","mimeType","subType","maxWidth","maxHeight","role","schemeIdUri","Role","Role_asArray","accessibility","Accessibility","Accessibility_asArray","mediaUrl","streamIndexTimeScale","prevSegment","segmentTimeline","chunks","getElementsByTagName","MAX_SAFE_INTEGER","mapSegmentTimeline","availabilityTimeOffset","mapSegmentTemplate","BaseURL","Id","mapRepresentation","Representation","Representation_asArray","qualityLevel","fourCCValue","isNaN","toUpperCase","warn","nalHeader","exec","substr","getH264Codec","codecPrivateDataHex","arr16","indexFreq","extensionSamplingFrequencyIndex","samplingRate","objectType","Channels","Uint16Array","setAttribute","getAACCodec","STPP","getKIDFromProtectionHeader","protectionHeader","wrmHeader","KID","uuid","prHeader","recordType","recordLength","recordValue","subarray","getWRMHeaderFromPRHeader","decodeArray","firstChild","buffer","fromCharCode","DOMParser","parseFromString","querySelector","textContent","swapBytes","pos1","pos2","temp","processManifest","xmlDoc","adaptations","timestampOffset","segmentDuration","contentProtections","smoothStreamingMedia","protection","protocol","profiles","dvrWindowLength","mediaPresentationDuration","minBufferTime","ttmlTimeIsRelative","refreshManifestOnSwitchTrack","doNotUpdateDVRWindowOnBufferUpdated","ignorePostponeTimePeriod","Period","streams","AdaptationSet","mapPeriod","pro","__text","__prefix","pro_asArray","createPRContentProtection","widevineCP","wvCencHeader","encodeASCII","createWidevineContentProtection","ContentProtection_asArray","initialization","targetLiveDelay","streaming","liveDelay","liveDelayFragmentCount","targetDelayCapping","bufferTime","stableBufferTime","bufferTimeAtTopQuality","bufferTimeAtTopQualityLongForm","calcFromSegmentTimeline","timeShiftBuffer","update","prevManifest","getValue","presentationTimeOffset","parse","performance","now","parseDOM","xmlParseTime","mss2dashTime","toPrecision","getMatchers","getIron","mssParser","fragmentInfoControllers","initSegmentType","streamController","mssFragmentProcessor","getStreamProcessor","getActiveStreamProcessors","filter","processor","getFragmentInfoController","controller","startFragmentInfoControllers","forEach","TEXT","fragmentInfoController","onInitFragmentNeeded","chunk","createDataChunk","streamInfo","INIT_FRAGMENT_LOADED","onSegmentMediaLoaded","isDynamic","dvrWindowSize","onPlaybackPaused","getIsDynamic","onPlaybackSeeking","onTTMLPreProcess","ttmlSubtitles","off","INIT_FRAGMENT_NEEDED","createMssParser","registerEvents","on","priority","getSingletonFactoryByName","getClassName","EVENT_PRIORITY_HIGH","updateClassFactory"],"mappings":"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","file":"dash.mss.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dashjs\"] = factory();\n\telse\n\t\troot[\"dashjs\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 102);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DashJSError {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default DashJSError;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssHandler from './MssHandler';\n\n// Shove both of these into the global scope\nvar context = (typeof window !== 'undefined' && window) || global;\n\nvar dashjs = context.dashjs;\nif (!dashjs) {\n    dashjs = context.dashjs = {};\n}\n\ndashjs.MssHandler = MssHandler;\n\nexport default dashjs;\nexport { MssHandler };\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { HTTPRequest } from '../vo/metrics/HTTPRequest';\n\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor(url) {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.startTime = NaN;\n        this.mediaStartTime = NaN;\n        this.mediaType = null;\n        this.mediaInfo = null;\n        this.type = null;\n        this.duration = NaN;\n        this.timescale = NaN;\n        this.range = null;\n        this.url = url || null;\n        this.serviceLocation = null;\n        this.requestStartDate = null;\n        this.firstByteDate = null;\n        this.requestEndDate = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = null;\n        this.wallStartTime = null;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.responseType = 'arraybuffer';\n        this.representationId = null;\n    }\n\n    isInitializationRequest() {\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\n    }\n\n    setInfo(info) {\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        this.url = info && info.url ? info.url : null;\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ErrorsBase {\n    extend (errors, config) {\n        if (!errors) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const err in errors) {\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\n            this[err] = errors[err];\n\n        }\n    }\n}\n\nexport default ErrorsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n\n/**\n * @class\n * @implements EventsBase\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor() {\n        super();\n        /**\n         * Triggered when playback will not start yet\n         * as the MPD's availabilityStartTime is in the future.\n         * Check delay property in payload to determine time before playback will start.\n         * @event MediaPlayerEvents#AST_IN_FUTURE\n         */\n        this.AST_IN_FUTURE = 'astInFuture';\n\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferStalled';\n\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferLoaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n         * Triggered when the buffer level of a media type has been updated\n         * @event MediaPlayerEvents#BUFFER_LEVEL_UPDATED\n         */\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n\n        /**\n         * Triggered when a dynamic stream changed to static (transition phase between Live and On-Demand).\n         * @event MediaPlayerEvents#DYNAMIC_TO_STATIC\n         */\n        this.DYNAMIC_TO_STATIC = 'dynamicToStatic';\n\n        /**\n         * Triggered when there is an error from the element or MSE source buffer.\n         * @event MediaPlayerEvents#ERROR\n         */\n        this.ERROR = 'error';\n        /**\n         * Triggered when a fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\n         */\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n\n        /**\n         * Triggered when a partial fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\n         */\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\n        /**\n         * Triggered when a fragment download has started.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\n         */\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n\n        /**\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\n         */\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n\n        /**\n         * Triggered when {@link module:Debug} logger methods are called.\n         * @event MediaPlayerEvents#LOG\n         */\n        this.LOG = 'log';\n\n        /**\n         * Triggered when the manifest load is complete\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestLoaded';\n\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricsChanged';\n\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricChanged';\n\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricAdded';\n\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricUpdated';\n\n        /**\n         * Triggered when a new stream (period) starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\n\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\n\n        /**\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\n         */\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\n\n        /**\n         * Triggered when the new ABR quality is being rendered on-screen.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\n         */\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\n\n        /**\n         * Triggered when the new track is being rendered.\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\n         */\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\n\n        /**\n         * Triggered when a stream (period) is being loaded\n         * @event MediaPlayerEvents#STREAM_INITIALIZING\n         */\n        this.STREAM_INITIALIZING = 'streamInitializing';\n\n        /**\n         * Triggered when a stream (period) is loaded\n         * @event MediaPlayerEvents#STREAM_UPDATED\n         */\n        this.STREAM_UPDATED = 'streamUpdated';\n\n        /**\n         * Triggered when a stream (period) is activated\n         * @event MediaPlayerEvents#STREAM_ACTIVATED\n         */\n        this.STREAM_ACTIVATED = 'streamActivated';\n\n        /**\n         * Triggered when a stream (period) is deactivated\n         * @event MediaPlayerEvents#STREAM_DEACTIVATED\n         */\n        this.STREAM_DEACTIVATED = 'streamDeactivated';\n\n        /**\n         * Triggered when a stream (period) is activated\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streamInitialized';\n\n        /**\n         * Triggered when the player has been reset.\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\n         */\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\n\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\n\n        /**\n         * Triggered when a ttml chunk is parsed.\n         * @event MediaPlayerEvents#TTML_PARSED\n         */\n        this.TTML_PARSED = 'ttmlParsed';\n\n        /**\n         * Triggered when a ttml chunk has to be parsed.\n         * @event MediaPlayerEvents#TTML_TO_PARSE\n         */\n        this.TTML_TO_PARSE = 'ttmlToParse';\n\n        /**\n         * Triggered when a caption is rendered.\n         * @event MediaPlayerEvents#CAPTION_RENDERED\n         */\n        this.CAPTION_RENDERED = 'captionRendered';\n\n        /**\n         * Triggered when the caption container is resized.\n         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE\n         */\n        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * This corresponds to the CAN_PLAY_THROUGH readyState.\n         * @event MediaPlayerEvents#CAN_PLAY_THROUGH\n         */\n        this.CAN_PLAY_THROUGH = 'canPlayThrough';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n\n        /**\n         * Sent when playback is not allowed (for example if user gesture is needed).\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\n         */\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\n\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_LOADED_DATA = 'playbackLoadedData';\n\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n\n        /**\n         * Sent when the video element reports stalled\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\n         */\n        this.PLAYBACK_STALLED = 'playbackStalled';\n\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n\n        /**\n         * Sent when the media playback has stopped because of a temporary lack of data.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\n         */\n        this.PLAYBACK_WAITING = 'playbackWaiting';\n\n        /**\n         * Manifest validity changed - As a result of an MPD validity expiration event.\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\n         */\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\n\n        /**\n         * Dash events are triggered at their respective start points on the timeline.\n         * @event MediaPlayerEvents#EVENT_MODE_ON_START\n         */\n        this.EVENT_MODE_ON_START = 'eventModeOnStart';\n\n        /**\n         * Dash events are triggered as soon as they were parsed.\n         * @event MediaPlayerEvents#EVENT_MODE_ON_RECEIVE\n         */\n        this.EVENT_MODE_ON_RECEIVE = 'eventModeOnReceive';\n\n        /**\n         * Event that is dispatched whenever the player encounters a potential conformance validation that might lead to unexpected/not optimal behavior\n         * @event MediaPlayerEvents#CONFORMANCE_VIOLATION\n         */\n        this.CONFORMANCE_VIOLATION = 'conformanceViolation';\n\n        /**\n         * Event that is dispatched whenever the player switches to a different representation\n         * @event MediaPlayerEvents#REPRESENTATION_SWITCH\n         */\n        this.REPRESENTATION_SWITCH = 'representationSwitch';\n\n        /**\n         * Event that is dispatched whenever an adaptation set is removed due to all representations not being supported.\n         * @event MediaPlayerEvents#ADAPTATION_SET_REMOVED_NO_CAPABILITIES\n         */\n        this.ADAPTATION_SET_REMOVED_NO_CAPABILITIES = 'adaptationSetRemovedNoCapabilities';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n * @ignore\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in seconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * The media segment quality\n         * @public\n         */\n        this._quality = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n        /**\n         * The type of the loader that was used. Distinguish between fetch loader and xhr loader\n         */\n        this._fileLoaderType = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n * @ignore\n */\nclass HTTPRequestTrace {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n        /**\n         * Measurement throughput in kbits/s\n         * @public\n         */\n        this._t = null;\n    }\n}\n\nHTTPRequest.GET = 'GET';\nHTTPRequest.HEAD = 'HEAD';\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\nHTTPRequest.DVB_REPORTING_TYPE = 'DVBReporting';\nHTTPRequest.LICENSE = 'license';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport {HTTPRequest, HTTPRequestTrace};\n","var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET=\"0123456789abcdefghijklmnopqrstuvwxyz\";var supportsNativeBigInt=typeof BigInt===\"function\";function Integer(v,radix,alphabet,caseSensitive){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10&&!alphabet?parseValue(v):parseBase(v,radix,alphabet,caseSensitive);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function NativeBigInt(value){this.value=value}NativeBigInt.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value)};NativeBigInt.prototype.plus=NativeBigInt.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value)};NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value)};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value)};NativeBigInt.prototype.times=NativeBigInt.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);if(supportsNativeBigInt){return[new NativeBigInt(self.value/n.value),new NativeBigInt(self.value%n.value)]}var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value)};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value)};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;NativeBigInt.prototype.pow=function(v){var n=parseValue(v);var a=this.value,b=n.value;var _0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);var x=this;var y=Integer[1];while(true){if((b&_1)===_1){y=y.times(x);--b}if(b===_0)break;b/=_2;x=x.square()}return y};BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};NativeBigInt.prototype.compareAbs=function(v){var a=this.value;var b=parseValue(v).value;a=a>=0?a:-a;b=b>=0?b:-b;return a===b?0:a>b?1:-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;NativeBigInt.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var a=this.value;var b=parseValue(v).value;return a===b?0:a>b?1:-1};NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive;BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative;BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);if(n.isZero())return false;if(n.isUnit())return true;if(n.compareAbs(2)===0)return this.isEven();return this.mod(n).isZero()};NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.isUnit()||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);var logN=Math.log(2)*bits.toJSNumber();var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.isZero()){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.isUnit())throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=BASE}BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(v){var remQuo;var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:typeof v===\"bigint\"?v|BigInt(LOBMASK_I):v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var digits=toBase(range,BASE).value;var result=[],restricted=true;for(var i=0;i<digits.length;i++){var top=restricted?digits[i]:BASE;var digit=truncate(Math.random()*top);result.push(digit);if(digit<top)restricted=false}return low.add(Integer.fromArray(result,BASE,false))}var parseBase=function(text,base,alphabet,caseSensitive){alphabet=alphabet||DEFAULT_ALPHABET;text=String(text);if(!caseSensitive){text=text.toLowerCase();alphabet=alphabet.toLowerCase()}var length=text.length;var i;var absBase=Math.abs(base);var alphabetValues={};for(i=0;i<alphabet.length;i++){alphabetValues[alphabet[i]]=i}for(i=0;i<length;i++){var c=text[i];if(c===\"-\")continue;if(c in alphabetValues){if(alphabetValues[c]>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i];if(c in alphabetValues)digits.push(parseValue(alphabetValues[c]));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\"&&i<text.length);digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit,alphabet){alphabet=alphabet||DEFAULT_ALPHABET;if(digit<alphabet.length){return alphabet[digit]}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.isUnit()){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base,alphabet){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(function(x){return stringify(x,alphabet)}).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix,alphabet);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix,alphabet);return String(this.value)};NativeBigInt.prototype.toString=SmallInteger.prototype.toString;NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return supportsNativeBigInt?new NativeBigInt(BigInt(x)):new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);if(supportsNativeBigInt){return new NativeBigInt(BigInt(sign?\"-\"+v:v))}var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(supportsNativeBigInt){return new NativeBigInt(BigInt(v))}if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}if(typeof v===\"bigint\"){return new NativeBigInt(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=parseValue(i);if(i>0)Integer[-i]=parseValue(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DataChunk {\n    //Represents a data structure that keep all the necessary info about a single init/media segment\n    constructor() {\n        this.streamId = null;\n        this.mediaInfo = null;\n        this.segmentType = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.bytes = null;\n        this.start = NaN;\n        this.end = NaN;\n        this.duration = NaN;\n        this.representationId = null;\n        this.endFragment = null;\n    }\n}\n\nexport default DataChunk;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\n\nfunction MssFragmentInfoController(config) {\n\n    config = config || {};\n\n    let instance,\n        logger,\n        fragmentModel,\n        started,\n        type,\n        loadFragmentTimeout,\n        startTime,\n        startFragmentTime,\n        index;\n\n    const streamProcessor = config.streamProcessor;\n    const baseURLController = config.baseURLController;\n    const debug = config.debug;\n    const controllerType = 'MssFragmentInfoController';\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    function initialize() {\n        type = streamProcessor.getType();\n        fragmentModel = streamProcessor.getFragmentModel();\n\n        started = false;\n        startTime = null;\n        startFragmentTime = null;\n    }\n\n    function start() {\n        if (started) return;\n\n        logger.debug('Start');\n\n        started = true;\n        index = 0;\n\n        loadNextFragmentInfo();\n    }\n\n    function stop() {\n        if (!started) return;\n\n        logger.debug('Stop');\n\n        clearTimeout(loadFragmentTimeout);\n        started = false;\n        startTime = null;\n        startFragmentTime = null;\n    }\n\n    function reset() {\n        stop();\n    }\n\n    function loadNextFragmentInfo() {\n        if (!started) return;\n\n        // Get last segment from SegmentTimeline\n        const representation = getCurrentRepresentation();\n        const manifest = representation.adaptation.period.mpd.manifest;\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S_asArray;\n        const segment = segments[segments.length - 1];\n\n        // logger.debug('Last fragment time: ' + (segment.t / adaptation.SegmentTemplate.timescale));\n\n        // Generate segment request\n        const request = getRequestForSegment(adaptation, representation, segment);\n\n        // Send segment request\n        requestFragment.call(this, request);\n    }\n\n    function getRequestForSegment(adaptation, representation, segment) {\n        let timescale = adaptation.SegmentTemplate.timescale;\n        let request = new FragmentRequest();\n\n        request.mediaType = type;\n        request.type = HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE;\n        // request.range = segment.mediaRange;\n        request.startTime = segment.t / timescale;\n        request.duration = segment.d / timescale;\n        request.timescale = timescale;\n        // request.availabilityStartTime = segment.availabilityStartTime;\n        // request.availabilityEndTime = segment.availabilityEndTime;\n        // request.wallStartTime = segment.wallStartTime;\n        request.quality = representation.index;\n        request.index = index++;\n        request.mediaInfo = streamProcessor.getMediaInfo();\n        request.adaptationIndex = representation.adaptation.index;\n        request.representationId = representation.id;\n        request.url = baseURLController.resolve(representation.path).url + adaptation.SegmentTemplate.media;\n        request.url = request.url.replace('$Bandwidth$', representation.bandwidth);\n        request.url = request.url.replace('$Time$', segment.tManifest ? segment.tManifest : segment.t);\n        request.url = request.url.replace('/Fragments(', '/FragmentInfo(');\n\n        return request;\n    }\n\n    function getCurrentRepresentation() {\n        const representationController = streamProcessor.getRepresentationController();\n        const representation = representationController.getCurrentRepresentation();\n        return representation;\n    }\n\n    function requestFragment(request) {\n        // logger.debug('Load FragmentInfo for time: ' + request.startTime);\n        if (streamProcessor.getFragmentModel().isFragmentLoadedOrPending(request)) {\n            // We may have reached end of timeline in case of start-over streams\n            logger.debug('End of timeline');\n            stop();\n            return;\n        }\n\n        fragmentModel.executeRequest(request);\n    }\n\n    function fragmentInfoLoaded (e) {\n        if (!started) return;\n\n        const request = e.request;\n        if (!e.response) {\n            logger.error('Load error', request.url);\n            return;\n        }\n\n        let deltaFragmentTime,\n            deltaTime,\n            delay;\n\n        // logger.debug('FragmentInfo loaded: ', request.url);\n\n        if (startTime === null) {\n            startTime = new Date().getTime();\n        }\n\n        if (!startFragmentTime) {\n            startFragmentTime = request.startTime;\n        }\n\n        // Determine delay before requesting next FragmentInfo\n        deltaTime = (new Date().getTime() - startTime) / 1000;\n        deltaFragmentTime = (request.startTime + request.duration) - startFragmentTime;\n        delay = Math.max(0, (deltaFragmentTime - deltaTime));\n\n        // Set timeout for requesting next FragmentInfo\n        clearTimeout(loadFragmentTimeout);\n        loadFragmentTimeout = setTimeout(function () {\n            loadFragmentTimeout = null;\n            loadNextFragmentInfo();\n        }, delay * 1000);\n    }\n\n    function getType() {\n        return type;\n    }\n\n    instance = {\n        initialize: initialize,\n        controllerType: controllerType,\n        start: start,\n        fragmentInfoLoaded: fragmentInfoLoaded,\n        getType: getType,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentInfoController.__dashjs_factory_name = 'MssFragmentInfoController';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentInfoController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from '../../core/errors/ErrorsBase';\n\n/**\n * @class\n *\n */\nclass MssErrors extends ErrorsBase {\n    constructor() {\n        super();\n        /**\n         * Error code returned when no tfrf box is detected in MSS live stream\n         */\n        this.MSS_NO_TFRF_CODE = 200;\n\n        /**\n         * Error code returned when one of the codecs defined in the manifest is not supported\n         */\n        this.MSS_UNSUPPORTED_CODEC_CODE = 201;\n\n        this.MSS_NO_TFRF_MESSAGE = 'Missing tfrf in live media segment';\n        this.MSS_UNSUPPORTED_CODEC_MESSAGE = 'Unsupported codec';\n    }\n}\n\nlet mssErrors = new MssErrors();\nexport default mssErrors;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from '../streaming/vo/DashJSError';\nimport MssErrors from './errors/MssErrors';\n\nimport Events from '../streaming/MediaPlayerEvents';\n\n/**\n * @module MssFragmentMoofProcessor\n * @ignore\n * @param {Object} config object\n */\nfunction MssFragmentMoofProcessor(config) {\n\n    config = config || {};\n    let instance,\n        type,\n        logger;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const errorHandler = config.errHandler;\n    const eventBus = config.eventBus;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        type = '';\n    }\n\n    function processTfrf(request, tfrf, tfdt, streamProcessor) {\n        const representationController = streamProcessor.getRepresentationController();\n        const representation = representationController.getCurrentRepresentation();\n\n        const manifest = representation.adaptation.period.mpd.manifest;\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        const timescale = adaptation.SegmentTemplate.timescale;\n\n        type = streamProcessor.getType();\n\n        // Process tfrf only for live streams or start-over static streams (timeShiftBufferDepth > 0)\n        if (manifest.type !== 'dynamic' && !manifest.timeShiftBufferDepth) {\n            return;\n        }\n\n        if (!tfrf) {\n            errorHandler.error(new DashJSError(MssErrors.MSS_NO_TFRF_CODE, MssErrors.MSS_NO_TFRF_MESSAGE));\n            return;\n        }\n\n        // Get adaptation's segment timeline (always a SegmentTimeline in Smooth Streaming use case)\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S;\n        const entries = tfrf.entry;\n        let entry,\n            segmentTime,\n            range;\n        let segment = null;\n        let t = 0;\n        let endTime;\n        let availabilityStartTime = null;\n\n        if (entries.length === 0) {\n            return;\n        }\n\n        // Consider only first tfrf entry (to avoid pre-condition failure on fragment info requests)\n        entry = entries[0];\n\n        // In case of start-over streams, check if we have reached end of original manifest duration (set in timeShiftBufferDepth)\n        // => then do not update anymore timeline\n        if (manifest.type === 'static') {\n            // Get first segment time\n            segmentTime = segments[0].tManifest ? parseFloat(segments[0].tManifest) : segments[0].t;\n            if (entry.fragment_absolute_time > (segmentTime + (manifest.timeShiftBufferDepth * timescale))) {\n                return;\n            }\n        }\n\n        // logger.debug('entry - t = ', (entry.fragment_absolute_time / timescale));\n\n        // Get last segment time\n        segmentTime = segments[segments.length - 1].tManifest ? parseFloat(segments[segments.length - 1].tManifest) : segments[segments.length - 1].t;\n        // logger.debug('Last segment - t = ', (segmentTime / timescale));\n\n        // Check if we have to append new segment to timeline\n        if (entry.fragment_absolute_time <= segmentTime) {\n            // Update DVR window range => set range end to end time of current segment\n            range = {\n                start: segments[0].t / timescale,\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\n            };\n\n            updateDVR(request.mediaType, range, streamProcessor.getStreamInfo().manifestInfo);\n            return;\n        }\n\n        // logger.debug('Add new segment - t = ', (entry.fragment_absolute_time / timescale));\n        segment = {};\n        segment.t = entry.fragment_absolute_time;\n        segment.d = entry.fragment_duration;\n        // If timestamps starts at 0 relative to 1st segment (dynamic to static) then update segment time\n        if (segments[0].tManifest) {\n            segment.t -= parseFloat(segments[0].tManifest) - segments[0].t;\n            segment.tManifest = entry.fragment_absolute_time;\n        }\n\n        // Patch previous segment duration\n        let lastSegment = segments[segments.length - 1];\n        if (lastSegment.t + lastSegment.d !== segment.t) {\n            logger.debug('Patch segment duration - t = ', lastSegment.t + ', d = ' + lastSegment.d + ' => ' + (segment.t - lastSegment.t));\n            lastSegment.d = segment.t - lastSegment.t;\n        }\n\n        segments.push(segment);\n\n        // In case of static start-over streams, update content duration\n        if (manifest.type === 'static') {\n            if (type === 'video') {\n                segment = segments[segments.length - 1];\n                endTime = (segment.t + segment.d) / timescale;\n                if (endTime > representation.adaptation.period.duration) {\n                    eventBus.trigger(Events.MANIFEST_VALIDITY_CHANGED, { sender: this, newDuration: endTime });\n                }\n            }\n            return;\n        }\n        else {\n            // In case of live streams, update segment timeline according to DVR window\n            if (manifest.timeShiftBufferDepth && manifest.timeShiftBufferDepth > 0) {\n                // Get timestamp of the last segment\n                segment = segments[segments.length - 1];\n                t = segment.t;\n\n                // Determine the segments' availability start time\n                availabilityStartTime = (t - (manifest.timeShiftBufferDepth * timescale)) / timescale;\n\n                // Remove segments prior to availability start time\n                segment = segments[0];\n                endTime = (segment.t + segment.d) / timescale;\n                while (endTime < availabilityStartTime) {\n                    // Check if not currently playing the segment to be removed\n                    if (!playbackController.isPaused() && playbackController.getTime() < endTime) {\n                        break;\n                    }\n                    // logger.debug('Remove segment  - t = ' + (segment.t / timescale));\n                    segments.splice(0, 1);\n                    segment = segments[0];\n                    endTime =  (segment.t + segment.d) / timescale;\n                }\n            }\n\n            // Update DVR window range => set range end to end time of current segment\n            range = {\n                start: segments[0].t / timescale,\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\n            };\n\n            updateDVR(type, range, streamProcessor.getStreamInfo().manifestInfo);\n        }\n\n    }\n\n    function updateDVR(type, range, manifestInfo) {\n        if (type !== 'video' && type !== 'audio') return;\n        const dvrInfos = dashMetrics.getCurrentDVRInfo(type);\n        if (!dvrInfos || (range.end > dvrInfos.range.end)) {\n            logger.debug('Update DVR range: [' + range.start + ' - ' + range.end + ']');\n            dashMetrics.addDVRInfo(type, playbackController.getTime(), manifestInfo, range);\n            playbackController.updateCurrentTime(type);\n        }\n    }\n\n    // This function returns the offset of the 1st byte of a child box within a container box\n    function getBoxOffset(parent, type) {\n        let offset = 8;\n        let i = 0;\n\n        for (i = 0; i < parent.boxes.length; i++) {\n            if (parent.boxes[i].type === type) {\n                return offset;\n            }\n            offset += parent.boxes[i].size;\n        }\n        return offset;\n    }\n\n    function convertFragment(e, streamProcessor) {\n        let i;\n\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        const isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        const tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        const traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        const trun = isoFile.fetch('trun');\n\n        // Process tfxd boxes\n        // This box provide absolute timestamp but we take the segment start time for tfdt\n        let tfxd = isoFile.fetch('tfxd');\n        if (tfxd) {\n            tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd), 1);\n            tfxd = null;\n        }\n        let tfrf = isoFile.fetch('tfrf');\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n\n        // If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)\n        // => convert sepiff box it into a senc box\n        // => create saio and saiz boxes (if not already present)\n        const sepiff = isoFile.fetch('sepiff');\n        if (sepiff !== null) {\n            sepiff.type = 'senc';\n            sepiff.usertype = undefined;\n\n            let saio = isoFile.fetch('saio');\n            if (saio === null) {\n                // Create Sample Auxiliary Information Offsets Box box (saio)\n                saio = ISOBoxer.createFullBox('saio', traf);\n                saio.version = 0;\n                saio.flags = 0;\n                saio.entry_count = 1;\n                saio.offset = [0];\n\n                const saiz = ISOBoxer.createFullBox('saiz', traf);\n                saiz.version = 0;\n                saiz.flags = 0;\n                saiz.sample_count = sepiff.sample_count;\n                saiz.default_sample_info_size = 0;\n                saiz.sample_info_size = [];\n\n                if (sepiff.flags & 0x02) {\n                    // Sub-sample encryption => set sample_info_size for each sample\n                    for (i = 0; i < sepiff.sample_count; i += 1) {\n                        // 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)\n                        // 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)\n                        saiz.sample_info_size[i] = 10 + (6 * sepiff.entry[i].NumberOfEntries);\n                    }\n                } else {\n                    // No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)\n                    saiz.default_sample_info_size = 8;\n                }\n            }\n        }\n\n        tfhd.flags &= 0xFFFFFE; // set tfhd.base-data-offset-present to false\n        tfhd.flags |= 0x020000; // set tfhd.default-base-is-moof to true\n        trun.flags |= 0x000001; // set trun.data-offset-present to true\n\n        // Update trun.data_offset field that corresponds to first data byte (inside mdat box)\n        const moof = isoFile.fetch('moof');\n        let length = moof.getLength();\n        trun.data_offset = length + 8;\n\n        // Update saio box offset field according to new senc box offset\n        let saio = isoFile.fetch('saio');\n        if (saio !== null) {\n            let trafPosInMoof = getBoxOffset(moof, 'traf');\n            let sencPosInTraf = getBoxOffset(traf, 'senc');\n            // Set offset from begin fragment to the first IV field in senc box\n            saio.offset[0] = trafPosInMoof + sencPosInTraf + 16; // 16 = box header (12) + sample_count field size (4)\n        }\n\n        // Write transformed/processed fragment into request reponse data\n        e.response = isoFile.write();\n    }\n\n    function updateSegmentList(e, streamProcessor) {\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        if (!e.response) {\n            throw new Error('e.response parameter is missing');\n        }\n\n        const isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        const tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        let traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        let tfrf = isoFile.fetch('tfrf');\n        processTfrf(e.request, tfrf, tfdt, streamProcessor);\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n    }\n\n    function getType() {\n        return type;\n    }\n\n    instance = {\n        convertFragment: convertFragment,\n        updateSegmentList: updateSegmentList,\n        getType: getType\n    };\n\n    setup();\n    return instance;\n}\n\nMssFragmentMoofProcessor.__dashjs_factory_name = 'MssFragmentMoofProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoofProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport MssErrors from './errors/MssErrors';\n\n/**\n * @module MssFragmentMoovProcessor\n * @ignore\n * @param {Object} config object\n */\nfunction MssFragmentMoovProcessor(config) {\n    config = config || {};\n    const NALUTYPE_SPS = 7;\n    const NALUTYPE_PPS = 8;\n    const constants = config.constants;\n    const ISOBoxer = config.ISOBoxer;\n\n    let protectionController = config.protectionController;\n    let instance,\n        period,\n        adaptationSet,\n        representation,\n        contentProtection,\n        timescale,\n        trackId;\n\n    function createFtypBox(isoFile) {\n        let ftyp = ISOBoxer.createBox('ftyp', isoFile);\n        ftyp.major_brand = 'iso6';\n        ftyp.minor_version = 1; // is an informative integer for the minor version of the major brand\n        ftyp.compatible_brands = []; //is a list, to the end of the box, of brands isom, iso6 and msdh\n        ftyp.compatible_brands[0] = 'isom'; // => decimal ASCII value for isom\n        ftyp.compatible_brands[1] = 'iso6'; // => decimal ASCII value for iso6\n        ftyp.compatible_brands[2] = 'msdh'; // => decimal ASCII value for msdh\n\n        return ftyp;\n    }\n\n    function createMoovBox(isoFile) {\n\n        // moov box\n        let moov = ISOBoxer.createBox('moov', isoFile);\n\n        // moov/mvhd\n        createMvhdBox(moov);\n\n        // moov/trak\n        let trak = ISOBoxer.createBox('trak', moov);\n\n        // moov/trak/tkhd\n        createTkhdBox(trak);\n\n        // moov/trak/mdia\n        let mdia = ISOBoxer.createBox('mdia', trak);\n\n        // moov/trak/mdia/mdhd\n        createMdhdBox(mdia);\n\n        // moov/trak/mdia/hdlr\n        createHdlrBox(mdia);\n\n        // moov/trak/mdia/minf\n        let minf = ISOBoxer.createBox('minf', mdia);\n\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                // moov/trak/mdia/minf/vmhd\n                createVmhdBox(minf);\n                break;\n            case constants.AUDIO:\n                // moov/trak/mdia/minf/smhd\n                createSmhdBox(minf);\n                break;\n            default:\n                break;\n        }\n\n        // moov/trak/mdia/minf/dinf\n        let dinf = ISOBoxer.createBox('dinf', minf);\n\n        // moov/trak/mdia/minf/dinf/dref\n        createDrefBox(dinf);\n\n        // moov/trak/mdia/minf/stbl\n        let stbl = ISOBoxer.createBox('stbl', minf);\n\n        // Create empty stts, stsc, stco and stsz boxes\n        // Use data field as for codem-isoboxer unknown boxes for setting fields value\n\n        // moov/trak/mdia/minf/stbl/stts\n        let stts = ISOBoxer.createFullBox('stts', stbl);\n        stts._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsc\n        let stsc = ISOBoxer.createFullBox('stsc', stbl);\n        stsc._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stco\n        let stco = ISOBoxer.createFullBox('stco', stbl);\n        stco._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsz\n        let stsz = ISOBoxer.createFullBox('stsz', stbl);\n        stsz._data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, sample_size = 0, sample_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsd\n        createStsdBox(stbl);\n\n        // moov/mvex\n        let mvex = ISOBoxer.createBox('mvex', moov);\n\n        // moov/mvex/trex\n        createTrexBox(mvex);\n\n        if (contentProtection && protectionController) {\n            let supportedKS = protectionController.getSupportedKeySystemsFromContentProtection(contentProtection);\n            createProtectionSystemSpecificHeaderBox(moov, supportedKS);\n        }\n    }\n\n    function createMvhdBox(moov) {\n\n        let mvhd = ISOBoxer.createFullBox('mvhd', moov);\n\n        mvhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mvhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mvhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mvhd.timescale = timescale; // the time-scale for the entire presentation => 10000000 for MSS\n        mvhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the length of the presentation (in the indicated timescale) =>  take duration of period\n        mvhd.rate = 1.0; // 16.16 number, '1.0' = normal playback\n        mvhd.volume = 1.0; // 8.8 number, '1.0' = full volume\n        mvhd.reserved1 = 0;\n        mvhd.reserved2 = [0x0, 0x0];\n        mvhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        mvhd.pre_defined = [0, 0, 0, 0, 0, 0];\n        mvhd.next_track_ID = trackId + 1; // indicates a value to use for the track ID of the next track to be added to this presentation\n\n        return mvhd;\n    }\n\n    function createTkhdBox(trak) {\n\n        let tkhd = ISOBoxer.createFullBox('tkhd', trak);\n\n        tkhd.version = 1; // version = 1  in order to have 64bits duration value\n        tkhd.flags = 0x1 | // Track_enabled (0x000001): Indicates that the track is enabled\n            0x2 | // Track_in_movie (0x000002):  Indicates that the track is used in the presentation\n            0x4; // Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation\n\n        tkhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        tkhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        tkhd.track_ID = trackId; // uniquely identifies this track over the entire life-time of this presentation\n        tkhd.reserved1 = 0;\n        tkhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period\n        tkhd.reserved2 = [0x0, 0x0];\n        tkhd.layer = 0; // specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track\n        tkhd.alternate_group = 0; // specifies a group or collection of tracks => ignore\n        tkhd.volume = 1.0; // '1.0' = full volume\n        tkhd.reserved3 = 0;\n        tkhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        tkhd.width = representation.width; // visual presentation width\n        tkhd.height = representation.height; // visual presentation height\n\n        return tkhd;\n    }\n\n    function createMdhdBox(mdia) {\n\n        let mdhd = ISOBoxer.createFullBox('mdhd', mdia);\n\n        mdhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mdhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mdhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mdhd.timescale = timescale; // the time-scale for the entire presentation\n        mdhd.duration = period.duration === Infinity ? 0xFFFFFFFFFFFFFFFF : Math.round(period.duration * timescale); // the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.\n        mdhd.language = adaptationSet.lang || 'und'; // declares the language code for this media\n        mdhd.pre_defined = 0;\n\n        return mdhd;\n    }\n\n    function createHdlrBox(mdia) {\n\n        let hdlr = ISOBoxer.createFullBox('hdlr', mdia);\n\n        hdlr.pre_defined = 0;\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                hdlr.handler_type = 'vide';\n                break;\n            case constants.AUDIO:\n                hdlr.handler_type = 'soun';\n                break;\n            default:\n                hdlr.handler_type = 'meta';\n                break;\n        }\n        hdlr.name = representation.id;\n        hdlr.reserved = [0, 0, 0];\n\n        return hdlr;\n    }\n\n    function createVmhdBox(minf) {\n\n        let vmhd = ISOBoxer.createFullBox('vmhd', minf);\n\n        vmhd.flags = 1;\n\n        vmhd.graphicsmode = 0; // specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image\n        vmhd.opcolor = [0, 0, 0]; // is a set of 3 colour values (red, green, blue) available for use by graphics modes\n\n        return vmhd;\n    }\n\n    function createSmhdBox(minf) {\n\n        let smhd = ISOBoxer.createFullBox('smhd', minf);\n\n        smhd.flags = 1;\n\n        smhd.balance = 0; // is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.\n        smhd.reserved = 0;\n\n        return smhd;\n    }\n\n    function createDrefBox(dinf) {\n\n        let dref = ISOBoxer.createFullBox('dref', dinf);\n\n        dref.entry_count = 1;\n        dref.entries = [];\n\n        let url = ISOBoxer.createFullBox('url ', dref, false);\n        url.location = '';\n        url.flags = 1;\n\n        dref.entries.push(url);\n\n        return dref;\n    }\n\n    function createStsdBox(stbl) {\n\n        let stsd = ISOBoxer.createFullBox('stsd', stbl);\n\n        stsd.entries = [];\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n            case constants.AUDIO:\n                stsd.entries.push(createSampleEntry(stsd));\n                break;\n            default:\n                break;\n        }\n\n        stsd.entry_count = stsd.entries.length; // is an integer that counts the actual entries\n        return stsd;\n    }\n\n    function createSampleEntry(stsd) {\n        let codec = representation.codecs.substring(0, representation.codecs.indexOf('.'));\n\n        switch (codec) {\n            case 'avc1':\n                return createAVCVisualSampleEntry(stsd, codec);\n            case 'mp4a':\n                return createMP4AudioSampleEntry(stsd, codec);\n            default:\n                throw {\n                    code: MssErrors.MSS_UNSUPPORTED_CODEC_CODE,\n                    message: MssErrors.MSS_UNSUPPORTED_CODEC_MESSAGE,\n                    data: {\n                        codec: codec\n                    }\n                };\n        }\n    }\n\n    function createAVCVisualSampleEntry(stsd, codec) {\n        let avc1;\n\n        if (contentProtection) {\n            avc1 = ISOBoxer.createBox('encv', stsd, false);\n        } else {\n            avc1 = ISOBoxer.createBox('avc1', stsd, false);\n        }\n\n        // SampleEntry fields\n        avc1.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        avc1.data_reference_index = 1;\n\n        // VisualSampleEntry fields\n        avc1.pre_defined1 = 0;\n        avc1.reserved2 = 0;\n        avc1.pre_defined2 = [0, 0, 0];\n        avc1.height = representation.height;\n        avc1.width = representation.width;\n        avc1.horizresolution = 72; // 72 dpi\n        avc1.vertresolution = 72; // 72 dpi\n        avc1.reserved3 = 0;\n        avc1.frame_count = 1; // 1 compressed video frame per sample\n        avc1.compressorname = [\n            0x0A, 0x41, 0x56, 0x43, 0x20, 0x43, 0x6F, 0x64, // = 'AVC Coding';\n            0x69, 0x6E, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n        ];\n        avc1.depth = 0x0018; // 0x0018 – images are in colour with no alpha.\n        avc1.pre_defined3 = 65535;\n        avc1.config = createAVC1ConfigurationRecord();\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', avc1);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return avc1;\n    }\n\n    function createAVC1ConfigurationRecord() {\n\n        let avcC = null;\n        let avcCLength = 15; // length = 15 by default (0 SPS and 0 PPS)\n\n        // First get all SPS and PPS from codecPrivateData\n        let sps = [];\n        let pps = [];\n        let AVCProfileIndication = 0;\n        let AVCLevelIndication = 0;\n        let profile_compatibility = 0;\n\n        let nalus = representation.codecPrivateData.split('00000001').slice(1);\n        let naluBytes, naluType;\n\n        for (let i = 0; i < nalus.length; i++) {\n            naluBytes = hexStringtoBuffer(nalus[i]);\n\n            naluType = naluBytes[0] & 0x1F;\n\n            switch (naluType) {\n                case NALUTYPE_SPS:\n                    sps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = sequenceParameterSetLength field length\n                    break;\n                case NALUTYPE_PPS:\n                    pps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = pictureParameterSetLength field length\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        // Get profile and level from SPS\n        if (sps.length > 0) {\n            AVCProfileIndication = sps[0][1];\n            profile_compatibility = sps[0][2];\n            AVCLevelIndication = sps[0][3];\n        }\n\n        // Generate avcC buffer\n        avcC = new Uint8Array(avcCLength);\n\n        let i = 0;\n        // length\n        avcC[i++] = (avcCLength & 0xFF000000) >> 24;\n        avcC[i++] = (avcCLength & 0x00FF0000) >> 16;\n        avcC[i++] = (avcCLength & 0x0000FF00) >> 8;\n        avcC[i++] = (avcCLength & 0x000000FF);\n        avcC.set([0x61, 0x76, 0x63, 0x43], i); // type = 'avcC'\n        i += 4;\n        avcC[i++] = 1; // configurationVersion = 1\n        avcC[i++] = AVCProfileIndication;\n        avcC[i++] = profile_compatibility;\n        avcC[i++] = AVCLevelIndication;\n        avcC[i++] = 0xFF; // '11111' + lengthSizeMinusOne = 3\n        avcC[i++] = 0xE0 | sps.length; // '111' + numOfSequenceParameterSets\n        for (let n = 0; n < sps.length; n++) {\n            avcC[i++] = (sps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (sps[n].length & 0x00FF);\n            avcC.set(sps[n], i);\n            i += sps[n].length;\n        }\n        avcC[i++] = pps.length; // numOfPictureParameterSets\n        for (let n = 0; n < pps.length; n++) {\n            avcC[i++] = (pps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (pps[n].length & 0x00FF);\n            avcC.set(pps[n], i);\n            i += pps[n].length;\n        }\n\n        return avcC;\n    }\n\n    function createMP4AudioSampleEntry(stsd, codec) {\n        let mp4a;\n\n        if (contentProtection) {\n            mp4a = ISOBoxer.createBox('enca', stsd, false);\n        } else {\n            mp4a = ISOBoxer.createBox('mp4a', stsd, false);\n        }\n\n        // SampleEntry fields\n        mp4a.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        mp4a.data_reference_index = 1;\n\n        // AudioSampleEntry fields\n        mp4a.reserved2 = [0x0, 0x0];\n        mp4a.channelcount = representation.audioChannels;\n        mp4a.samplesize = 16;\n        mp4a.pre_defined = 0;\n        mp4a.reserved_3 = 0;\n        mp4a.samplerate = representation.audioSamplingRate << 16;\n\n        mp4a.esds = createMPEG4AACESDescriptor();\n\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', mp4a);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return mp4a;\n    }\n\n    function createMPEG4AACESDescriptor() {\n\n        // AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field\n        let audioSpecificConfig = hexStringtoBuffer(representation.codecPrivateData);\n\n        // ESDS length = esds box header length (= 12) +\n        //               ES_Descriptor header length (= 5) +\n        //               DecoderConfigDescriptor header length (= 15) +\n        //               decoderSpecificInfo header length (= 2) +\n        //               AudioSpecificConfig length (= codecPrivateData length)\n        let esdsLength = 34 + audioSpecificConfig.length;\n        let esds = new Uint8Array(esdsLength);\n\n        let i = 0;\n        // esds box\n        esds[i++] = (esdsLength & 0xFF000000) >> 24; // esds box length\n        esds[i++] = (esdsLength & 0x00FF0000) >> 16; // ''\n        esds[i++] = (esdsLength & 0x0000FF00) >> 8; // ''\n        esds[i++] = (esdsLength & 0x000000FF); // ''\n        esds.set([0x65, 0x73, 0x64, 0x73], i); // type = 'esds'\n        i += 4;\n        esds.set([0, 0, 0, 0], i); // version = 0, flags = 0\n        i += 4;\n        // ES_Descriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x03; // tag = 0x03 (ES_DescrTag)\n        esds[i++] = 20 + audioSpecificConfig.length; // size\n        esds[i++] = (trackId & 0xFF00) >> 8; // ES_ID = track_id\n        esds[i++] = (trackId & 0x00FF); // ''\n        esds[i++] = 0; // flags and streamPriority\n\n        // DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x04; // tag = 0x04 (DecoderConfigDescrTag)\n        esds[i++] = 15 + audioSpecificConfig.length; // size\n        esds[i++] = 0x40; // objectTypeIndication = 0x40 (MPEG-4 AAC)\n        esds[i] = 0x05 << 2; // streamType = 0x05 (Audiostream)\n        esds[i] |= 0 << 1; // upStream = 0\n        esds[i++] |= 1; // reserved = 1\n        esds[i++] = 0xFF; // buffersizeDB = undefined\n        esds[i++] = 0xFF; // ''\n        esds[i++] = 0xFF; // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // maxBitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // avgbitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n\n        // DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x05; // tag = 0x05 (DecSpecificInfoTag)\n        esds[i++] = audioSpecificConfig.length; // size\n        esds.set(audioSpecificConfig, i); // AudioSpecificConfig bytes\n\n        return esds;\n    }\n\n    function createOriginalFormatBox(sinf, codec) {\n        let frma = ISOBoxer.createBox('frma', sinf);\n        frma.data_format = stringToCharCode(codec);\n    }\n\n    function createSchemeTypeBox(sinf) {\n        let schm = ISOBoxer.createFullBox('schm', sinf);\n\n        schm.flags = 0;\n        schm.version = 0;\n        schm.scheme_type = 0x63656E63; // 'cenc' => common encryption\n        schm.scheme_version = 0x00010000; // version set to 0x00010000 (Major version 1, Minor version 0)\n    }\n\n    function createSchemeInformationBox(sinf) {\n        let schi = ISOBoxer.createBox('schi', sinf);\n\n        // Create and add Track Encryption Box\n        createTrackEncryptionBox(schi);\n    }\n\n    function createProtectionSystemSpecificHeaderBox(moov, keySystems) {\n        let pssh_bytes,\n            pssh,\n            i,\n            parsedBuffer;\n\n        for (i = 0; i < keySystems.length; i += 1) {\n            pssh_bytes = keySystems[i].initData;\n            if (pssh_bytes) {\n                parsedBuffer = ISOBoxer.parseBuffer(pssh_bytes);\n                pssh = parsedBuffer.fetch('pssh');\n                if (pssh) {\n                    ISOBoxer.Utils.appendBox(moov, pssh);\n                }\n            }\n        }\n    }\n\n    function createTrackEncryptionBox(schi) {\n        let tenc = ISOBoxer.createFullBox('tenc', schi);\n\n        tenc.flags = 0;\n        tenc.version = 0;\n\n        tenc.default_IsEncrypted = 0x1;\n        tenc.default_IV_size = 8;\n        tenc.default_KID = (contentProtection && (contentProtection.length) > 0 && contentProtection[0]['cenc:default_KID']) ?\n            contentProtection[0]['cenc:default_KID'] : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n    }\n\n    function createTrexBox(moov) {\n        let trex = ISOBoxer.createFullBox('trex', moov);\n\n        trex.track_ID = trackId;\n        trex.default_sample_description_index = 1;\n        trex.default_sample_duration = 0;\n        trex.default_sample_size = 0;\n        trex.default_sample_flags = 0;\n\n        return trex;\n    }\n\n    function hexStringtoBuffer(str) {\n        let buf = new Uint8Array(str.length / 2);\n        let i;\n\n        for (i = 0; i < str.length / 2; i += 1) {\n            buf[i] = parseInt('' + str[i * 2] + str[i * 2 + 1], 16);\n        }\n        return buf;\n    }\n\n    function stringToCharCode(str) {\n        let code = 0;\n        let i;\n\n        for (i = 0; i < str.length; i += 1) {\n            code |= str.charCodeAt(i) << ((str.length - i - 1) * 8);\n        }\n        return code;\n    }\n\n    function generateMoov(rep) {\n        if (!rep || !rep.adaptation) {\n            return;\n        }\n\n        let isoFile,\n            arrayBuffer;\n\n        representation = rep;\n        adaptationSet = representation.adaptation;\n\n        period = adaptationSet.period;\n        trackId = adaptationSet.index + 1;\n        contentProtection = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].ContentProtection;\n\n        timescale = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].SegmentTemplate.timescale;\n\n        isoFile = ISOBoxer.createFile();\n        createFtypBox(isoFile);\n        createMoovBox(isoFile);\n\n        arrayBuffer = isoFile.write();\n\n        return arrayBuffer;\n    }\n\n    instance = {\n        generateMoov: generateMoov\n    };\n\n    return instance;\n}\n\nMssFragmentMoovProcessor.__dashjs_factory_name = 'MssFragmentMoovProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoovProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssFragmentMoofProcessor from './MssFragmentMoofProcessor';\nimport MssFragmentMoovProcessor from './MssFragmentMoovProcessor';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\n\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nfunction MssFragmentProcessor(config) {\n\n    config = config || {};\n    const context = this.context;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const eventBus = config.eventBus;\n    const protectionController = config.protectionController;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n    let mssFragmentMoovProcessor,\n        mssFragmentMoofProcessor,\n        instance;\n\n    function setup() {\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\n\n        mssFragmentMoovProcessor = MssFragmentMoovProcessor(context).create({\n            protectionController: protectionController,\n            constants: config.constants,\n            ISOBoxer: ISOBoxer});\n\n        mssFragmentMoofProcessor = MssFragmentMoofProcessor(context).create({\n            dashMetrics: dashMetrics,\n            playbackController: playbackController,\n            ISOBoxer: ISOBoxer,\n            eventBus: eventBus,\n            debug: debug,\n            errHandler: config.errHandler\n        });\n    }\n\n    function generateMoov(rep) {\n        return mssFragmentMoovProcessor.generateMoov(rep);\n    }\n\n    function processFragment(e, streamProcessor) {\n        if (!e || !e.request || !e.response) {\n            throw new Error('e parameter is missing or malformed');\n        }\n\n        if (e.request.type === 'MediaSegment') {\n            // MediaSegment => convert to Smooth Streaming moof format\n            mssFragmentMoofProcessor.convertFragment(e, streamProcessor);\n\n        } else if (e.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\n            // FragmentInfo (live) => update segments list\n            mssFragmentMoofProcessor.updateSegmentList(e, streamProcessor);\n\n            // Stop event propagation (FragmentInfo must not be added to buffer)\n            e.sender = null;\n        }\n    }\n\n    instance = {\n        generateMoov: generateMoov,\n        processFragment: processFragment\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @module MssParser\n * @ignore\n * @param {Object} config object\n */\n\nimport BigInt from '../../../externals/BigInteger';\n\nfunction MssParser(config) {\n    config = config || {};\n    const BASE64 = config.BASE64;\n    const debug = config.debug;\n    const constants = config.constants;\n    const manifestModel = config.manifestModel;\n    const settings = config.settings;\n\n    const DEFAULT_TIME_SCALE = 10000000.0;\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AACH', 'AACP', 'AVC1', 'H264', 'TTML', 'DFXP'];\n    // MPEG-DASH Role and accessibility mapping for text tracks according to ETSI TS 103 285 v1.1.1 (section 7.1.2)\n    const ROLE = {\n        'CAPT': 'main',\n        'SUBT': 'alternate',\n        'DESC': 'main'\n    };\n    const ACCESSIBILITY = {\n        'DESC': '2'\n    };\n    const samplingFrequencyIndex = {\n        96000: 0x0,\n        88200: 0x1,\n        64000: 0x2,\n        48000: 0x3,\n        44100: 0x4,\n        32000: 0x5,\n        24000: 0x6,\n        22050: 0x7,\n        16000: 0x8,\n        12000: 0x9,\n        11025: 0xA,\n        8000: 0xB,\n        7350: 0xC\n    };\n    const mimeTypeMap = {\n        'video': 'video/mp4',\n        'audio': 'audio/mp4',\n        'text': 'application/mp4'\n    };\n\n    let instance,\n        logger,\n        initialBufferSettings;\n\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    function getAttributeAsBoolean(node, attrName) {\n        const value = node.getAttribute(attrName);\n        if (!value) return false;\n        return value.toLowerCase() === 'true';\n    }\n\n    function mapPeriod(smoothStreamingMedia, timescale) {\n        const period = {};\n        let streams,\n            adaptation;\n\n        // For each StreamIndex node, create an AdaptationSet element\n        period.AdaptationSet_asArray = [];\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\n        for (let i = 0; i < streams.length; i++) {\n            adaptation = mapAdaptationSet(streams[i], timescale);\n            if (adaptation !== null) {\n                period.AdaptationSet_asArray.push(adaptation);\n            }\n        }\n\n        if (period.AdaptationSet_asArray.length > 0) {\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\n        }\n\n        return period;\n    }\n\n    function mapAdaptationSet(streamIndex, timescale) {\n        const adaptationSet = {};\n        const representations = [];\n        let segmentTemplate;\n        let qualityLevels,\n            representation,\n            i,\n            index;\n\n        const name = streamIndex.getAttribute('Name');\n        const type = streamIndex.getAttribute('Type');\n        const lang = streamIndex.getAttribute('Language');\n        const fallBackId = lang ? type + '_' + lang : type;\n\n        adaptationSet.id = name || fallBackId;\n        adaptationSet.contentType = type;\n        adaptationSet.lang = lang || 'und';\n        adaptationSet.mimeType = mimeTypeMap[type];\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\n\n        // Map text tracks subTypes to MPEG-DASH AdaptationSet role and accessibility (see ETSI TS 103 285 v1.1.1, section 7.1.2)\n        if (adaptationSet.subType) {\n            if (ROLE[adaptationSet.subType]) {\n                let role = {\n                    schemeIdUri: 'urn:mpeg:dash:role:2011',\n                    value: ROLE[adaptationSet.subType]\n                };\n                adaptationSet.Role = role;\n                adaptationSet.Role_asArray = [role];\n            }\n            if (ACCESSIBILITY[adaptationSet.subType]) {\n                let accessibility = {\n                    schemeIdUri: 'urn:tva:metadata:cs:AudioPurposeCS:2007',\n                    value: ACCESSIBILITY[adaptationSet.subType]\n                };\n                adaptationSet.Accessibility = accessibility;\n                adaptationSet.Accessibility_asArray = [accessibility];\n            }\n        }\n\n        // Create a SegmentTemplate with a SegmentTimeline\n        segmentTemplate = mapSegmentTemplate(streamIndex, timescale);\n\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\n        // For each QualityLevel node, create a Representation element\n        for (i = 0; i < qualityLevels.length; i++) {\n            // Propagate BaseURL and mimeType\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\n\n            // Set quality level id\n            index = qualityLevels[i].getAttribute('Index');\n            qualityLevels[i].Id = adaptationSet.id + ((index !== null) ? ('_' + index) : '');\n\n            // Map Representation to QualityLevel\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\n\n            if (representation !== null) {\n                // Copy SegmentTemplate into Representation\n                representation.SegmentTemplate = segmentTemplate;\n\n                representations.push(representation);\n            }\n        }\n\n        if (representations.length === 0) {\n            return null;\n        }\n\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\n        adaptationSet.Representation_asArray = representations;\n\n        // Set SegmentTemplate\n        adaptationSet.SegmentTemplate = segmentTemplate;\n\n        return adaptationSet;\n    }\n\n    function mapRepresentation(qualityLevel, streamIndex) {\n        const representation = {};\n        const type = streamIndex.getAttribute('Type');\n        let fourCCValue = null;\n        let width = null;\n        let height = null;\n\n        representation.id = qualityLevel.Id;\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\n        representation.mimeType = qualityLevel.mimeType;\n\n        width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\n        height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\n        if (!isNaN(width)) representation.width = width;\n        if (!isNaN(height)) representation.height = height;\n\n\n        fourCCValue = qualityLevel.getAttribute('FourCC');\n\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\n        if (fourCCValue === null || fourCCValue === '') {\n            fourCCValue = streamIndex.getAttribute('FourCC');\n        }\n\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\n        // then we consider the stream is an audio AAC stream\n        if (fourCCValue === null || fourCCValue === '') {\n            if (type === constants.AUDIO) {\n                fourCCValue = 'AAC';\n            } else if (type === constants.VIDEO) {\n                logger.debug('FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type \"video\"');\n                return null;\n            }\n        }\n\n        // Check if codec is supported\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\n            // Do not send warning\n            logger.warn('Codec not supported: ' + fourCCValue);\n            return null;\n        }\n\n        // Get codecs value according to FourCC field\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\n            representation.codecs = getH264Codec(qualityLevel);\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\n            representation.codecs = constants.STPP;\n        }\n\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\n        representation.BaseURL = qualityLevel.BaseURL;\n\n        return representation;\n    }\n\n    function getH264Codec(qualityLevel) {\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let nalHeader,\n            avcoti;\n\n\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\n        // three bytes in the sequence parameter set NAL unit.\n        // => Find the SPS nal header\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\n\n        return 'avc1.' + avcoti;\n    }\n\n    function getAACCodec(qualityLevel, fourCCValue) {\n        const samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let objectType = 0;\n        let codecPrivateDataHex,\n            arr16,\n            indexFreq,\n            extensionSamplingFrequencyIndex;\n\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\n        //set objectType to 5 => strange, it should be 2\n        if (fourCCValue === 'AACH') {\n            objectType = 0x05;\n        }\n        //if codecPrivateData is empty, build it :\n        if (codecPrivateData === undefined || codecPrivateData === '') {\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\n            indexFreq = samplingFrequencyIndex[samplingRate];\n            if (fourCCValue === 'AACH') {\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\n                codecPrivateData = new Uint8Array(4);\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\n                // equals to SamplingRate*2\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\n                codecPrivateData[3] = 0x0; //alignment bits\n\n                arr16 = new Uint16Array(2);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\n\n            } else {\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\n                codecPrivateData = new Uint8Array(2);\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\n                // put the 2 bytes in an 16 bits array\n                arr16 = new Uint16Array(1);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n            }\n\n            codecPrivateData = '' + codecPrivateDataHex;\n            codecPrivateData = codecPrivateData.toUpperCase();\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\n        } else if (objectType === 0) {\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\n        }\n\n        return 'mp4a.40.' + objectType;\n    }\n\n    function mapSegmentTemplate(streamIndex, timescale) {\n        const segmentTemplate = {};\n        let mediaUrl,\n            streamIndexTimeScale,\n            url;\n\n        url = streamIndex.getAttribute('Url');\n        mediaUrl = url ? url.replace('{bitrate}', '$Bandwidth$') : null;\n        mediaUrl = mediaUrl ? mediaUrl.replace('{start time}', '$Time$') : null;\n\n        streamIndexTimeScale = streamIndex.getAttribute('TimeScale');\n        streamIndexTimeScale = streamIndexTimeScale ? parseFloat(streamIndexTimeScale) : timescale;\n\n        segmentTemplate.media = mediaUrl;\n        segmentTemplate.timescale = streamIndexTimeScale;\n\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex, segmentTemplate.timescale);\n\n        // Patch: set availabilityTimeOffset to Infinity since segments are available as long as they are present in timeline\n        segmentTemplate.availabilityTimeOffset = 'INF';\n\n        return segmentTemplate;\n    }\n\n    function mapSegmentTimeline(streamIndex, timescale) {\n        const segmentTimeline = {};\n        const chunks = streamIndex.getElementsByTagName('c');\n        const segments = [];\n        let segment,\n            prevSegment,\n            tManifest,\n            i, j, r;\n        let duration = 0;\n\n        for (i = 0; i < chunks.length; i++) {\n            segment = {};\n\n            // Get time 't' attribute value\n            tManifest = chunks[i].getAttribute('t');\n\n            // => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)\n            // => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)\n            if (tManifest && BigInt(tManifest).greater(BigInt(Number.MAX_SAFE_INTEGER))) {\n                segment.tManifest = tManifest;\n            }\n            segment.t = parseFloat(tManifest);\n\n            // Get duration 'd' attribute value\n            segment.d = parseFloat(chunks[i].getAttribute('d'));\n\n            // If 't' not defined for first segment then t=0\n            if ((i === 0) && !segment.t) {\n                segment.t = 0;\n            }\n\n            if (i > 0) {\n                prevSegment = segments[segments.length - 1];\n                // Update previous segment duration if not defined\n                if (!prevSegment.d) {\n                    if (prevSegment.tManifest) {\n                        prevSegment.d = BigInt(tManifest).subtract(BigInt(prevSegment.tManifest)).toJSNumber();\n                    } else {\n                        prevSegment.d = segment.t - prevSegment.t;\n                    }\n                    duration += prevSegment.d;\n                }\n                // Set segment absolute timestamp if not set in manifest\n                if (!segment.t) {\n                    if (prevSegment.tManifest) {\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\n                        segment.t = parseFloat(segment.tManifest);\n                    } else {\n                        segment.t = prevSegment.t + prevSegment.d;\n                    }\n                }\n            }\n\n            if (segment.d) {\n                duration += segment.d;\n            }\n\n            // Create new segment\n            segments.push(segment);\n\n            // Support for 'r' attribute (i.e. \"repeat\" as in MPEG-DASH)\n            r = parseFloat(chunks[i].getAttribute('r'));\n            if (r) {\n\n                for (j = 0; j < (r - 1); j++) {\n                    prevSegment = segments[segments.length - 1];\n                    segment = {};\n                    segment.t = prevSegment.t + prevSegment.d;\n                    segment.d = prevSegment.d;\n                    if (prevSegment.tManifest) {\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\n                    }\n                    duration += segment.d;\n                    segments.push(segment);\n                }\n            }\n        }\n\n        segmentTimeline.S = segments;\n        segmentTimeline.S_asArray = segments;\n        segmentTimeline.duration = duration / timescale;\n\n        return segmentTimeline;\n    }\n\n    function getKIDFromProtectionHeader(protectionHeader) {\n        let prHeader,\n            wrmHeader,\n            xmlReader,\n            KID;\n\n        // Get PlayReady header as byte array (base64 decoded)\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\n\n        // Get Right Management header (WRMHEADER) from PlayReady header\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\n\n        if (wrmHeader) {\n            // Convert from multi-byte to unicode\n            wrmHeader = new Uint16Array(wrmHeader.buffer);\n\n            // Convert to string\n            wrmHeader = String.fromCharCode.apply(null, wrmHeader);\n\n            // Parse <WRMHeader> to get KID field value\n            xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\n            KID = xmlReader.querySelector('KID').textContent;\n\n            // Get KID (base64 decoded) as byte array\n            KID = BASE64.decodeArray(KID);\n\n            // Convert UUID from little-endian to big-endian\n            convertUuidEndianness(KID);\n        }\n\n        return KID;\n    }\n\n    function getWRMHeaderFromPRHeader(prHeader) {\n        let length,\n            recordCount,\n            recordType,\n            recordLength,\n            recordValue;\n        let i = 0;\n\n        // Parse PlayReady header\n\n        // Length - 32 bits (LE format)\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i]; // eslint-disable-line\n        i += 4;\n\n        // Record count - 16 bits (LE format)\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i]; // eslint-disable-line\n        i += 2;\n\n        // Parse records\n        while (i < prHeader.length) {\n            // Record type - 16 bits (LE format)\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\n            i += 2;\n\n            // Check if Rights Management header (record type = 0x01)\n            if (recordType === 0x01) {\n\n                // Record length - 16 bits (LE format)\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\n                i += 2;\n\n                // Record value => contains <WRMHEADER>\n                recordValue = new Uint8Array(recordLength);\n                recordValue.set(prHeader.subarray(i, i + recordLength));\n                return recordValue;\n            }\n        }\n\n        return null;\n    }\n\n    function convertUuidEndianness(uuid) {\n        swapBytes(uuid, 0, 3);\n        swapBytes(uuid, 1, 2);\n        swapBytes(uuid, 4, 5);\n        swapBytes(uuid, 6, 7);\n    }\n\n    function swapBytes(bytes, pos1, pos2) {\n        const temp = bytes[pos1];\n        bytes[pos1] = bytes[pos2];\n        bytes[pos2] = temp;\n    }\n\n\n    function createPRContentProtection(protectionHeader) {\n        let pro = {\n            __text: protectionHeader.firstChild.data,\n            __prefix: 'mspr'\n        };\n        return {\n            schemeIdUri: 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\n            value: 'com.microsoft.playready',\n            pro: pro,\n            pro_asArray: pro\n        };\n    }\n\n    function createWidevineContentProtection(KID) {\n        let widevineCP = {\n            schemeIdUri: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n            value: 'com.widevine.alpha'\n        };\n        if (!KID)\n            return widevineCP;\n        // Create Widevine CENC header (Protocol Buffer) with KID value\n        const wvCencHeader = new Uint8Array(2 + KID.length);\n        wvCencHeader[0] = 0x12;\n        wvCencHeader[1] = 0x10;\n        wvCencHeader.set(KID, 2);\n\n        // Create a pssh box\n        const length = 12 /* box length, type, version and flags */ + 16 /* SystemID */ + 4 /* data length */ + wvCencHeader.length;\n        let pssh = new Uint8Array(length);\n        let i = 0;\n\n        // Set box length value\n        pssh[i++] = (length & 0xFF000000) >> 24;\n        pssh[i++] = (length & 0x00FF0000) >> 16;\n        pssh[i++] = (length & 0x0000FF00) >> 8;\n        pssh[i++] = (length & 0x000000FF);\n\n        // Set type ('pssh'), version (0) and flags (0)\n        pssh.set([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00], i);\n        i += 8;\n\n        // Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')\n        pssh.set([0xed, 0xef, 0x8b, 0xa9, 0x79, 0xd6, 0x4a, 0xce, 0xa3, 0xc8, 0x27, 0xdc, 0xd5, 0x1d, 0x21, 0xed], i);\n        i += 16;\n\n        // Set data length value\n        pssh[i++] = (wvCencHeader.length & 0xFF000000) >> 24;\n        pssh[i++] = (wvCencHeader.length & 0x00FF0000) >> 16;\n        pssh[i++] = (wvCencHeader.length & 0x0000FF00) >> 8;\n        pssh[i++] = (wvCencHeader.length & 0x000000FF);\n\n        // Copy Widevine CENC header\n        pssh.set(wvCencHeader, i);\n\n        // Convert to BASE64 string\n        pssh = String.fromCharCode.apply(null, pssh);\n        pssh = BASE64.encodeASCII(pssh);\n\n        widevineCP.pssh = { __text: pssh };\n\n        return widevineCP;\n    }\n\n    function processManifest(xmlDoc) {\n        const manifest = {};\n        const contentProtections = [];\n        const smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\n        const protection = xmlDoc.getElementsByTagName('Protection')[0];\n        let protectionHeader = null;\n        let period,\n            adaptations,\n            contentProtection,\n            KID,\n            timestampOffset,\n            startTime,\n            segments,\n            timescale,\n            segmentDuration,\n            i, j;\n\n        // Set manifest node properties\n        manifest.protocol = 'MSS';\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\n        manifest.type = getAttributeAsBoolean(smoothStreamingMedia, 'IsLive') ? 'dynamic' : 'static';\n        timescale = smoothStreamingMedia.getAttribute('TimeScale');\n        manifest.timescale = timescale ? parseFloat(timescale) : DEFAULT_TIME_SCALE;\n        let dvrWindowLength = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength'));\n        // If the DVRWindowLength field is omitted for a live presentation or set to 0, the DVR window is effectively infinite\n        if (manifest.type === 'dynamic' && (dvrWindowLength === 0 || isNaN(dvrWindowLength))) {\n            dvrWindowLength = Infinity;\n        }\n        // Star-over\n        if (dvrWindowLength === 0 && getAttributeAsBoolean(smoothStreamingMedia, 'CanSeek')) {\n            dvrWindowLength = Infinity;\n        }\n\n        if (dvrWindowLength > 0) {\n            manifest.timeShiftBufferDepth = dvrWindowLength / manifest.timescale;\n        }\n\n        let duration = parseFloat(smoothStreamingMedia.getAttribute('Duration'));\n        manifest.mediaPresentationDuration = (duration === 0) ? Infinity : duration / manifest.timescale;\n        // By default, set minBufferTime to 2 sec. (but set below according to video segment duration)\n        manifest.minBufferTime = 2;\n        manifest.ttmlTimeIsRelative = true;\n\n        // Live manifest with Duration = start-over\n        if (manifest.type === 'dynamic' && duration > 0) {\n            manifest.type = 'static';\n            // We set timeShiftBufferDepth to initial duration, to be used by MssFragmentController to update segment timeline\n            manifest.timeShiftBufferDepth = duration / manifest.timescale;\n            // Duration will be set according to current segment timeline duration (see below)\n        }\n\n        if (manifest.type === 'dynamic') {\n            manifest.refreshManifestOnSwitchTrack = true; // Refresh manifest when switching tracks\n            manifest.doNotUpdateDVRWindowOnBufferUpdated = true; // DVRWindow is update by MssFragmentMoofPocessor based on tfrf boxes\n            manifest.ignorePostponeTimePeriod = true; // Never update manifest\n            manifest.availabilityStartTime = new Date(null); // Returns 1970\n        }\n\n        // Map period node to manifest root node\n        manifest.Period = mapPeriod(smoothStreamingMedia, manifest.timescale);\n        manifest.Period_asArray = [manifest.Period];\n\n        // Initialize period start time\n        period = manifest.Period;\n        period.start = 0;\n\n        // Uncomment to test live to static manifests\n        // if (manifest.type !== 'static') {\n        //     manifest.type = 'static';\n        //     manifest.mediaPresentationDuration = manifest.timeShiftBufferDepth;\n        //     manifest.timeShiftBufferDepth = null;\n        // }\n\n        // ContentProtection node\n        if (protection !== undefined) {\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\n\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\n\n            // Get KID (in CENC format) from protection header\n            KID = getKIDFromProtectionHeader(protectionHeader);\n\n            // Create ContentProtection for PlayReady\n            contentProtection = createPRContentProtection(protectionHeader);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            // Create ContentProtection for Widevine (as a CENC protection)\n            contentProtection = createWidevineContentProtection(KID);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            manifest.ContentProtection = contentProtections;\n            manifest.ContentProtection_asArray = contentProtections;\n        }\n\n        adaptations = period.AdaptationSet_asArray;\n\n        for (i = 0; i < adaptations.length; i += 1) {\n            adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\n            // Propagate content protection information into each adaptation\n            if (manifest.ContentProtection !== undefined) {\n                adaptations[i].ContentProtection = manifest.ContentProtection;\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\n            }\n\n            if (adaptations[i].contentType === 'video') {\n                // Get video segment duration\n                segmentDuration = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[0].d / adaptations[i].SegmentTemplate.timescale;\n                // Set minBufferTime to one segment duration\n                manifest.minBufferTime = segmentDuration;\n\n                if (manifest.type === 'dynamic') {\n                    // Match timeShiftBufferDepth to video segment timeline duration\n                    if (manifest.timeShiftBufferDepth > 0 &&\n                        manifest.timeShiftBufferDepth !== Infinity &&\n                        manifest.timeShiftBufferDepth > adaptations[i].SegmentTemplate.SegmentTimeline.duration) {\n                        manifest.timeShiftBufferDepth = adaptations[i].SegmentTemplate.SegmentTimeline.duration;\n                    }\n                }\n            }\n        }\n\n        // Cap minBufferTime to timeShiftBufferDepth\n        manifest.minBufferTime = Math.min(manifest.minBufferTime, (manifest.timeShiftBufferDepth ? manifest.timeShiftBufferDepth : Infinity));\n\n        // In case of live streams:\n        // 1- configure player buffering properties according to target live delay\n        // 2- adapt live delay and then buffers length in case timeShiftBufferDepth is too small compared to target live delay (see PlaybackController.computeLiveDelay())\n        // 3- Set retry attempts and intervals for FragmentInfo requests\n        if (manifest.type === 'dynamic') {\n            let targetLiveDelay = settings.get().streaming.delay.liveDelay;\n            if (!targetLiveDelay) {\n                const liveDelayFragmentCount = settings.get().streaming.delay.liveDelayFragmentCount !== null && !isNaN(settings.get().streaming.delay.liveDelayFragmentCount) ? settings.get().streaming.delay.liveDelayFragmentCount : 4;\n                targetLiveDelay = segmentDuration * liveDelayFragmentCount;\n            }\n            let targetDelayCapping = Math.max(manifest.timeShiftBufferDepth - 10/*END_OF_PLAYLIST_PADDING*/, manifest.timeShiftBufferDepth / 2);\n            let liveDelay = Math.min(targetDelayCapping, targetLiveDelay);\n            // Consider a margin of more than one segment in order to avoid Precondition Failed errors (412), for example if audio and video are not correctly synchronized\n            let bufferTime = liveDelay - (segmentDuration * 1.5);\n\n            // Store initial buffer settings\n            initialBufferSettings = {\n                'streaming': {\n                    'buffer': {\n                        'stableBufferTime': settings.get().streaming.buffer.stableBufferTime,\n                        'bufferTimeAtTopQuality': settings.get().streaming.buffer.bufferTimeAtTopQuality,\n                        'bufferTimeAtTopQualityLongForm': settings.get().streaming.buffer.bufferTimeAtTopQualityLongForm\n                    },\n                    'timeShiftBuffer': {\n                        calcFromSegmentTimeline: settings.get().streaming.timeShiftBuffer.calcFromSegmentTimeline\n                    },\n                    'delay': {\n                        'liveDelay': settings.get().streaming.delay.liveDelay\n                    }\n                }\n            };\n\n            settings.update({\n                'streaming': {\n                    'buffer': {\n                        'stableBufferTime': bufferTime,\n                        'bufferTimeAtTopQuality': bufferTime,\n                        'bufferTimeAtTopQualityLongForm': bufferTime\n                    },\n                    'timeShiftBuffer': {\n                        calcFromSegmentTimeline: true\n                    },\n                    'delay': {\n                        'liveDelay': liveDelay\n                    }\n                }\n            });\n        }\n\n        // Delete Content Protection under root manifest node\n        delete manifest.ContentProtection;\n        delete manifest.ContentProtection_asArray;\n\n        // In case of VOD streams, check if start time is greater than 0\n        // Then determine timestamp offset according to higher audio/video start time\n        // (use case = live stream delinearization)\n        if (manifest.type === 'static') {\n            // In case of start-over stream and manifest reloading (due to track switch)\n            // we consider previous timestampOffset to keep timelines synchronized\n            var prevManifest = manifestModel.getValue();\n            if (prevManifest && prevManifest.timestampOffset) {\n                timestampOffset = prevManifest.timestampOffset;\n            } else {\n                for (i = 0; i < adaptations.length; i++) {\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\n                        segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                        startTime = segments[0].t;\n                        if (timestampOffset === undefined) {\n                            timestampOffset = startTime;\n                        }\n                        timestampOffset = Math.min(timestampOffset, startTime);\n                        // Correct content duration according to minimum adaptation's segment timeline duration\n                        // in order to force <video> element sending 'ended' event\n                        manifest.mediaPresentationDuration = Math.min(manifest.mediaPresentationDuration, adaptations[i].SegmentTemplate.SegmentTimeline.duration);\n                    }\n                }\n            }\n            if (timestampOffset > 0) {\n                // Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)\n                manifest.timestampOffset = timestampOffset;\n                for (i = 0; i < adaptations.length; i++) {\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                    for (j = 0; j < segments.length; j++) {\n                        if (!segments[j].tManifest) {\n                            segments[j].tManifest = segments[j].t.toString();\n                        }\n                        segments[j].t -= timestampOffset;\n                    }\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\n                        period.start = Math.max(segments[0].t, period.start);\n                        adaptations[i].SegmentTemplate.presentationTimeOffset = period.start;\n                    }\n                }\n                period.start /= manifest.timescale;\n            }\n        }\n\n        // Floor the duration to get around precision differences between segments timestamps and MSE buffer timestamps\n        // and then avoid 'ended' event not being raised\n        manifest.mediaPresentationDuration = Math.floor(manifest.mediaPresentationDuration * 1000) / 1000;\n        period.duration = manifest.mediaPresentationDuration;\n\n        return manifest;\n    }\n\n    function parseDOM(data) {\n        let xmlDoc = null;\n\n        if (window.DOMParser) {\n            const parser = new window.DOMParser();\n\n            xmlDoc = parser.parseFromString(data, 'text/xml');\n            if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\n                throw new Error('parsing the manifest failed');\n            }\n        }\n\n        return xmlDoc;\n    }\n\n    function getMatchers() {\n        return null;\n    }\n\n    function getIron() {\n        return null;\n    }\n\n    function internalParse(data) {\n        let xmlDoc = null;\n        let manifest = null;\n\n        const startTime = window.performance.now();\n\n        // Parse the MSS XML manifest\n        xmlDoc = parseDOM(data);\n\n        const xmlParseTime = window.performance.now();\n\n        if (xmlDoc === null) {\n            return null;\n        }\n\n        // Convert MSS manifest into DASH manifest\n        manifest = processManifest(xmlDoc, new Date());\n\n        const mss2dashTime = window.performance.now();\n\n        logger.info('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\n\n        return manifest;\n    }\n\n    function reset() {\n        // Restore initial buffer settings\n        if (initialBufferSettings) {\n            settings.update(initialBufferSettings);\n        }\n    }\n\n    instance = {\n        parse: internalParse,\n        getMatchers: getMatchers,\n        getIron: getIron,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssParser.__dashjs_factory_name = 'MssParser';\nexport default dashjs.FactoryMaker.getClassFactory(MssParser); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DataChunk from '../streaming/vo/DataChunk';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport MssFragmentInfoController from './MssFragmentInfoController';\nimport MssFragmentProcessor from './MssFragmentProcessor';\nimport MssParser from './parser/MssParser';\nimport MssErrors from './errors/MssErrors';\nimport DashJSError from '../streaming/vo/DashJSError';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\n\nfunction MssHandler(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const constants = config.constants;\n    const initSegmentType = config.initSegmentType;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const streamController = config.streamController;\n    const protectionController = config.protectionController;\n    const mssFragmentProcessor = MssFragmentProcessor(context).create({\n        dashMetrics: dashMetrics,\n        playbackController: playbackController,\n        protectionController: protectionController,\n        streamController: streamController,\n        eventBus: eventBus,\n        constants: constants,\n        ISOBoxer: config.ISOBoxer,\n        debug: config.debug,\n        errHandler: config.errHandler\n    });\n    let mssParser,\n        fragmentInfoControllers,\n        instance;\n\n    function setup() {\n        fragmentInfoControllers = [];\n    }\n\n    function getStreamProcessor(type) {\n        return streamController.getActiveStreamProcessors().filter(processor => {\n            return processor.getType() === type;\n        })[0];\n    }\n\n    function getFragmentInfoController(type) {\n        return fragmentInfoControllers.filter(controller => {\n            return (controller.getType() === type);\n        })[0];\n    }\n\n    function createDataChunk(request, streamId, endFragment) {\n        const chunk = new DataChunk();\n\n        chunk.streamId = streamId;\n        chunk.mediaInfo = request.mediaInfo;\n        chunk.segmentType = request.type;\n        chunk.start = request.startTime;\n        chunk.duration = request.duration;\n        chunk.end = chunk.start + chunk.duration;\n        chunk.index = request.index;\n        chunk.quality = request.quality;\n        chunk.representationId = request.representationId;\n        chunk.endFragment = endFragment;\n\n        return chunk;\n    }\n\n    function startFragmentInfoControllers() {\n\n        // Create MssFragmentInfoControllers for each StreamProcessor of active stream (only for audio, video or text)\n        let processors = streamController.getActiveStreamProcessors();\n        processors.forEach(function (processor) {\n            if (processor.getType() === constants.VIDEO ||\n                processor.getType() === constants.AUDIO ||\n                processor.getType() === constants.TEXT) {\n\n                let fragmentInfoController = getFragmentInfoController(processor.getType());\n                if (!fragmentInfoController) {\n                    fragmentInfoController = MssFragmentInfoController(context).create({\n                        streamProcessor: processor,\n                        baseURLController: config.baseURLController,\n                        debug: config.debug\n                    });\n                    fragmentInfoController.initialize();\n                    fragmentInfoControllers.push(fragmentInfoController);\n                }\n                fragmentInfoController.start();\n            }\n        });\n    }\n\n    function stopFragmentInfoControllers() {\n        fragmentInfoControllers.forEach(c => {\n            c.reset();\n        });\n        fragmentInfoControllers = [];\n    }\n\n    function onInitFragmentNeeded(e) {\n        let streamProcessor = getStreamProcessor(e.mediaType);\n        if (!streamProcessor) return;\n\n        // Create init segment request\n        let representationController = streamProcessor.getRepresentationController();\n        let representation = representationController.getCurrentRepresentation();\n        let mediaInfo = streamProcessor.getMediaInfo();\n\n        let request = new FragmentRequest();\n        request.mediaType = representation.adaptation.type;\n        request.type = initSegmentType;\n        request.range = representation.range;\n        request.quality = representation.index;\n        request.mediaInfo = mediaInfo;\n        request.representationId = representation.id;\n\n        const chunk = createDataChunk(request, mediaInfo.streamInfo.id, e.type !== events.FRAGMENT_LOADING_PROGRESS);\n\n        try {\n            // Generate init segment (moov)\n            chunk.bytes = mssFragmentProcessor.generateMoov(representation);\n\n            // Notify init segment has been loaded\n            eventBus.trigger(events.INIT_FRAGMENT_LOADED,\n                { chunk: chunk },\n                { streamId: mediaInfo.streamInfo.id, mediaType: representation.adaptation.type }\n            );\n        } catch (e) {\n            config.errHandler.error(new DashJSError(e.code, e.message, e.data));\n        }\n\n        // Change the sender value to stop event to be propagated\n        e.sender = null;\n    }\n\n    function onSegmentMediaLoaded(e) {\n        if (e.error)  return;\n\n        let streamProcessor = getStreamProcessor(e.request.mediaType);\n        if (!streamProcessor) return;\n\n        // Process moof to transcode it from MSS to DASH (or to update segment timeline for SegmentInfo fragments)\n        mssFragmentProcessor.processFragment(e, streamProcessor);\n\n        if (e.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\n            // If FragmentInfo loaded, then notify corresponding MssFragmentInfoController\n            let fragmentInfoController = getFragmentInfoController(e.request.mediaType);\n            if (fragmentInfoController) {\n                fragmentInfoController.fragmentInfoLoaded(e);\n            }\n        }\n\n        // Start MssFragmentInfoControllers in case of start-over streams\n        let manifestInfo = e.request.mediaInfo.streamInfo.manifestInfo;\n        if (!manifestInfo.isDynamic && manifestInfo.dvrWindowSize !== Infinity) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onPlaybackPaused() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onPlaybackSeeking() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onTTMLPreProcess(ttmlSubtitles) {\n        if (!ttmlSubtitles || !ttmlSubtitles.data) {\n            return;\n        }\n\n        ttmlSubtitles.data = ttmlSubtitles.data.replace(/http:\\/\\/www.w3.org\\/2006\\/10\\/ttaf1/gi, 'http://www.w3.org/ns/ttml');\n    }\n\n    function registerEvents() {\n        eventBus.on(events.INIT_FRAGMENT_NEEDED, onInitFragmentNeeded, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_PAUSED, onPlaybackPaused, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_SEEKING, onPlaybackSeeking, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, instance, { priority: dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH }); /* jshint ignore:line */\n        eventBus.on(events.TTML_TO_PARSE, onTTMLPreProcess, instance);\n    }\n\n    function reset() {\n        if (mssParser) {\n            mssParser.reset();\n            mssParser = undefined;\n        }\n\n        eventBus.off(events.INIT_FRAGMENT_NEEDED, onInitFragmentNeeded, this);\n        eventBus.off(events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.off(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, this);\n        eventBus.off(events.TTML_TO_PARSE, onTTMLPreProcess, this);\n\n        // Reset FragmentInfoControllers\n        stopFragmentInfoControllers();\n    }\n\n    function createMssParser() {\n        mssParser = MssParser(context).create(config);\n        return mssParser;\n    }\n\n    instance = {\n        reset: reset,\n        createMssParser: createMssParser,\n        registerEvents: registerEvents\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssHandler.__dashjs_factory_name = 'MssHandler';\nconst factory = dashjs.FactoryMaker.getClassFactory(MssHandler); /* jshint ignore:line */\nfactory.errors = MssErrors;\ndashjs.FactoryMaker.updateClassFactory(MssHandler.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory; /* jshint ignore:line */\n"],"sourceRoot":""}